/*
 * <파일 설명>
 * 행렬의 정의를 확인해보는 예제입니다.
 * 행렬은 고등학교 과정이 아니므로 자세하게 설명하려고 합니다.
 * 게임 프로그래밍에서 행렬은 필수 개념이므로 반드시 알아야 합니다.
 * 예전에는 행렬이 고등학교 과정이었는데 어느 순간에 대학교 과정으로 넘어갔더군요.
 * 그래서 설명이 불친절해졌는데... 덕분에 행렬에 접근하기가 어려워졌습니다.
 * 행렬을 아예 모른다고 가정을 한 상태에서 진행할게요.
 */

// double에서 float으로 축소되는 것 허용
#pragma warning(disable : 4305)

#include <conio.h>   // CMD 입출력을 다루기 위한 헤더(비표준)
#include <windows.h> // CMD 확장 기능을 이용하기 위한 헤더(비표준)
#include <cstdio>    // CMD 입출력을 다루기 위한 헤더(표준)
#include <cmath>     // 수학을 다루기 위한 헤더(표준)
#include <cfloat>    // 실수를 다루기 위한 헤더(표준)

// 행렬 구조체
struct MatrixBase4X4
{
	// 배열보다는 각 성분으로 표현하는 게 좋습니다.
	// 익숙해지면 상관없지만 따로 표현하는 게 눈에 더 잘 들어옵니다.
	float _00, _01, _02, _03;
	float _10, _11, _12, _13;
	float _20, _21, _22, _23;
	float _30, _31, _32, _33;
};

// 행렬 클래스
class Matrix4X4 : public MatrixBase4X4
{
public:
	// 초기화는 0으로 설정합니다.
	// 이런 행렬을 영행렬(Zero Matrix)이라 부릅니다.
	Matrix4X4()
	{
		_00 = 0.0f; _01 = 0.0f; _02 = 0.0f; _03 = 0.0f;
		_10 = 0.0f; _11 = 0.0f; _12 = 0.0f; _13 = 0.0f;
		_20 = 0.0f; _21 = 0.0f; _22 = 0.0f; _23 = 0.0f;
		_30 = 0.0f; _31 = 0.0f; _32 = 0.0f; _33 = 0.0f;
	}

	~Matrix4X4() = default;

	void ShowMartixValue()
	{
		printf("    1열   2열   3열   4열\n");
		printf("1행 %.2f, %.2f, %.2f, %.2f\n", _00, _01, _02, _03);
		printf("2행 %.2f, %.2f, %.2f, %.2f\n", _10, _11, _12, _13);
		printf("3행 %.2f, %.2f, %.2f, %.2f\n", _20, _21, _22, _23);
		printf("4행 %.2f, %.2f, %.2f, %.2f\n", _30, _31, _32, _33);
	}
};

int main()
{
	printf("4행 4열의 행렬값을 출력합니다.\n");
	printf("----------------------------\n");
	
	Matrix4X4 mat; // 행렬은 약자로 mat이라 표현합니다.
	mat.ShowMartixValue();

	printf("----------------------------\n\n");

	///////////////////////////////////////////////////////////////

	// 행렬값을 설정합니다.
	mat._00 = 1.0f; mat._01 = 2.0f; mat._02 = 3.0f; mat._03 = 4.0f;
	mat._10 = 5.0f; mat._11 = 1.0f; mat._12 = 2.0f; mat._13 = 3.0f;
	mat._20 = 6.0f; mat._21 = 5.0f; mat._22 = 1.0f; mat._23 = 2.0f;
	mat._30 = 7.0f; mat._31 = 6.0f; mat._32 = 5.0f; mat._33 = 1.0f;

	printf("4행 4열의 행렬값을 출력합니다.\n");
	printf("----------------------------\n");
	mat.ShowMartixValue();
	printf("----------------------------\n");

	_getch();
	return 0;
}